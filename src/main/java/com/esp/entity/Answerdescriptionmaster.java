package com.esp.entity;
// Generated Jul 18, 2014 3:06:38 PM by Hibernate Tools 3.6.0



import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.SequenceGenerator;
import javax.persistence.Table;

/**
 * Answerdescriptionmaster generated by hbm2java
 */
@Entity
@Table(name="ANSWERDESCRIPTIONMASTER"
    ,schema="SURVEY"
)
public class Answerdescriptionmaster  implements java.io.Serializable {


     private Integer ansdescid;
     private String ansdescription;
     private Set<Answermaster> answermastersForAnsdescid9 = new HashSet<Answermaster>(0);
     private Set<Answermaster> answermastersForAnsdescid8 = new HashSet<Answermaster>(0);
     private Set<Answermaster> answermastersForAnsdescid5 = new HashSet<Answermaster>(0);
     private Set<Answermaster> answermastersForAnsdescid4 = new HashSet<Answermaster>(0);
     private Set<Answermaster> answermastersForAnsdescid7 = new HashSet<Answermaster>(0);
     private Set<Answermaster> answermastersForAnsdescid6 = new HashSet<Answermaster>(0);
     private Set<Answermaster> answermastersForAnsdescid1 = new HashSet<Answermaster>(0);
     private Set<Answermaster> answermastersForAnsdescid3 = new HashSet<Answermaster>(0);
     private Set<Answermaster> answermastersForAnsdescid10 = new HashSet<Answermaster>(0);
     private Set<Answermaster> answermastersForAnsdescid2 = new HashSet<Answermaster>(0);

    public Answerdescriptionmaster() {
    }

	
    public Answerdescriptionmaster(Integer ansdescid, String ansdescription) {
        this.ansdescid = ansdescid;
        this.ansdescription = ansdescription;
    }
    public Answerdescriptionmaster(Integer ansdescid, String ansdescription, Set<Answermaster> answermastersForAnsdescid9, Set<Answermaster> answermastersForAnsdescid8, Set<Answermaster> answermastersForAnsdescid5, Set<Answermaster> answermastersForAnsdescid4, Set<Answermaster> answermastersForAnsdescid7, Set<Answermaster> answermastersForAnsdescid6, Set<Answermaster> answermastersForAnsdescid1, Set<Answermaster> answermastersForAnsdescid3, Set<Answermaster> answermastersForAnsdescid10, Set<Answermaster> answermastersForAnsdescid2) {
       this.ansdescid = ansdescid;
       this.ansdescription = ansdescription;
       this.answermastersForAnsdescid9 = answermastersForAnsdescid9;
       this.answermastersForAnsdescid8 = answermastersForAnsdescid8;
       this.answermastersForAnsdescid5 = answermastersForAnsdescid5;
       this.answermastersForAnsdescid4 = answermastersForAnsdescid4;
       this.answermastersForAnsdescid7 = answermastersForAnsdescid7;
       this.answermastersForAnsdescid6 = answermastersForAnsdescid6;
       this.answermastersForAnsdescid1 = answermastersForAnsdescid1;
       this.answermastersForAnsdescid3 = answermastersForAnsdescid3;
       this.answermastersForAnsdescid10 = answermastersForAnsdescid10;
       this.answermastersForAnsdescid2 = answermastersForAnsdescid2;
    }
   
    @Id 

    // @SequenceGenerator(name = "SEQ_SURVEY_MASTER", sequenceName = "SEQ_SURVEY_MASTER")
    // @GeneratedValue(generator = "SEQ_SURVEY_MASTER", strategy = GenerationType.SEQUENCE)
    
    @SequenceGenerator(name ="AnsDesc_seq", sequenceName="SEQ_ANSWER_DESC_MASTER" )
    @GeneratedValue(generator="AnsDesc_seq", strategy=GenerationType.SEQUENCE) 
    @Column(name="ANSDESCID", unique=true, nullable=false, precision=22, scale=0)
    public Integer getAnsdescid() {
        return this.ansdescid;
    }
    
    public void setAnsdescid(Integer ansdescid) {
        this.ansdescid = ansdescid;
    }

    
    @Column(name="ANSDESCRIPTION", nullable=false, length=20)
    public String getAnsdescription() {
        return this.ansdescription;
    }
    
    public void setAnsdescription(String ansdescription) {
        this.ansdescription = ansdescription;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="answerdescriptionmasterByAnsdescid9")
    public Set<Answermaster> getAnswermastersForAnsdescid9() {
        return this.answermastersForAnsdescid9;
    }
    
    public void setAnswermastersForAnsdescid9(Set<Answermaster> answermastersForAnsdescid9) {
        this.answermastersForAnsdescid9 = answermastersForAnsdescid9;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="answerdescriptionmasterByAnsdescid8")
    public Set<Answermaster> getAnswermastersForAnsdescid8() {
        return this.answermastersForAnsdescid8;
    }
    
    public void setAnswermastersForAnsdescid8(Set<Answermaster> answermastersForAnsdescid8) {
        this.answermastersForAnsdescid8 = answermastersForAnsdescid8;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="answerdescriptionmasterByAnsdescid5")
    public Set<Answermaster> getAnswermastersForAnsdescid5() {
        return this.answermastersForAnsdescid5;
    }
    
    public void setAnswermastersForAnsdescid5(Set<Answermaster> answermastersForAnsdescid5) {
        this.answermastersForAnsdescid5 = answermastersForAnsdescid5;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="answerdescriptionmasterByAnsdescid4")
    public Set<Answermaster> getAnswermastersForAnsdescid4() {
        return this.answermastersForAnsdescid4;
    }
    
    public void setAnswermastersForAnsdescid4(Set<Answermaster> answermastersForAnsdescid4) {
        this.answermastersForAnsdescid4 = answermastersForAnsdescid4;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="answerdescriptionmasterByAnsdescid7")
    public Set<Answermaster> getAnswermastersForAnsdescid7() {
        return this.answermastersForAnsdescid7;
    }
    
    public void setAnswermastersForAnsdescid7(Set<Answermaster> answermastersForAnsdescid7) {
        this.answermastersForAnsdescid7 = answermastersForAnsdescid7;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="answerdescriptionmasterByAnsdescid6")
    public Set<Answermaster> getAnswermastersForAnsdescid6() {
        return this.answermastersForAnsdescid6;
    }
    
    public void setAnswermastersForAnsdescid6(Set<Answermaster> answermastersForAnsdescid6) {
        this.answermastersForAnsdescid6 = answermastersForAnsdescid6;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="answerdescriptionmasterByAnsdescid1")
    public Set<Answermaster> getAnswermastersForAnsdescid1() {
        return this.answermastersForAnsdescid1;
    }
    
    public void setAnswermastersForAnsdescid1(Set<Answermaster> answermastersForAnsdescid1) {
        this.answermastersForAnsdescid1 = answermastersForAnsdescid1;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="answerdescriptionmasterByAnsdescid3")
    public Set<Answermaster> getAnswermastersForAnsdescid3() {
        return this.answermastersForAnsdescid3;
    }
    
    public void setAnswermastersForAnsdescid3(Set<Answermaster> answermastersForAnsdescid3) {
        this.answermastersForAnsdescid3 = answermastersForAnsdescid3;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="answerdescriptionmasterByAnsdescid10")
    public Set<Answermaster> getAnswermastersForAnsdescid10() {
        return this.answermastersForAnsdescid10;
    }
    
    public void setAnswermastersForAnsdescid10(Set<Answermaster> answermastersForAnsdescid10) {
        this.answermastersForAnsdescid10 = answermastersForAnsdescid10;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="answerdescriptionmasterByAnsdescid2")
    public Set<Answermaster> getAnswermastersForAnsdescid2() {
        return this.answermastersForAnsdescid2;
    }
    
    public void setAnswermastersForAnsdescid2(Set<Answermaster> answermastersForAnsdescid2) {
        this.answermastersForAnsdescid2 = answermastersForAnsdescid2;
    }




}


