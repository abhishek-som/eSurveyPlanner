package com.esp.entity;
// Generated Jul 18, 2014 3:06:38 PM by Hibernate Tools 3.6.0



import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * Usermaster generated by hbm2java
 */
@Entity
@Table(name="USERMASTER"
    ,schema="SURVEY"
)
public class Usermaster  implements java.io.Serializable {


     private Integer userid;
     private String loginid;
     private String usertype;
     private String firstname;
     private String middlename;
     private String lastname;
     private Date dob;
     private String gender;
     private String maritalstatus;
     private Date createddate;
     private Date modifieddate;
     private String email;
     private Set<Questionanswermapping> questionanswermappingsForLastmodifiedbyid = new HashSet<Questionanswermapping>(0);
     private Set<Surveymaster> surveymastersForCreatedbyid = new HashSet<Surveymaster>(0);
     private Set<Userlist> userlists = new HashSet<Userlist>(0);
     private Set<Questionanswermapping> questionanswermappingsForCreatedbyid = new HashSet<Questionanswermapping>(0);
     private Set<Questionmaster> questionmastersForCreatedbyid = new HashSet<Questionmaster>(0);
     private Set<Surveymaster> surveymastersForLastmodifiedbyid = new HashSet<Surveymaster>(0);
     private Set<Questionmaster> questionmastersForLastmodifiedbyid = new HashSet<Questionmaster>(0);

    public Usermaster() {
    }

	
    public Usermaster(Integer userid, String loginid) {
        this.userid = userid;
        this.loginid = loginid;
    }
    public Usermaster(Integer userid, String loginid, String usertype, String firstname, String middlename, String lastname, Date dob, String gender, String maritalstatus, Date createddate, Date modifieddate, String email, Set<Questionanswermapping> questionanswermappingsForLastmodifiedbyid, Set<Surveymaster> surveymastersForCreatedbyid, Set<Userlist> userlists, Set<Questionanswermapping> questionanswermappingsForCreatedbyid, Set<Questionmaster> questionmastersForCreatedbyid, Set<Surveymaster> surveymastersForLastmodifiedbyid, Set<Questionmaster> questionmastersForLastmodifiedbyid) {
       this.userid = userid;
       this.loginid = loginid;
       this.usertype = usertype;
       this.firstname = firstname;
       this.middlename = middlename;
       this.lastname = lastname;
       this.dob = dob;
       this.gender = gender;
       this.maritalstatus = maritalstatus;
       this.createddate = createddate;
       this.modifieddate = modifieddate;
       this.email = email;
       this.questionanswermappingsForLastmodifiedbyid = questionanswermappingsForLastmodifiedbyid;
       this.surveymastersForCreatedbyid = surveymastersForCreatedbyid;
       this.userlists = userlists;
       this.questionanswermappingsForCreatedbyid = questionanswermappingsForCreatedbyid;
       this.questionmastersForCreatedbyid = questionmastersForCreatedbyid;
       this.surveymastersForLastmodifiedbyid = surveymastersForLastmodifiedbyid;
       this.questionmastersForLastmodifiedbyid = questionmastersForLastmodifiedbyid;
    }
   
     @Id 

    
    @Column(name="USERID", unique=true, nullable=false, precision=22, scale=0)
    public Integer getUserid() {
        return this.userid;
    }
    
    public void setUserid(Integer userid) {
        this.userid = userid;
    }

    
    @Column(name="LOGINID", nullable=false, length=50)
    public String getLoginid() {
        return this.loginid;
    }
    
    public void setLoginid(String loginid) {
        this.loginid = loginid;
    }

    
    @Column(name="USERTYPE", length=50)
    public String getUsertype() {
        return this.usertype;
    }
    
    public void setUsertype(String usertype) {
        this.usertype = usertype;
    }

    
    @Column(name="FIRSTNAME", length=50)
    public String getFirstname() {
        return this.firstname;
    }
    
    public void setFirstname(String firstname) {
        this.firstname = firstname;
    }

    
    @Column(name="MIDDLENAME", length=20)
    public String getMiddlename() {
        return this.middlename;
    }
    
    public void setMiddlename(String middlename) {
        this.middlename = middlename;
    }

    
    @Column(name="LASTNAME", length=50)
    public String getLastname() {
        return this.lastname;
    }
    
    public void setLastname(String lastname) {
        this.lastname = lastname;
    }

    @Temporal(TemporalType.DATE)
    @Column(name="DOB", length=7)
    public Date getDob() {
        return this.dob;
    }
    
    public void setDob(Date dob) {
        this.dob = dob;
    }

    
    @Column(name="GENDER", length=50)
    public String getGender() {
        return this.gender;
    }
    
    public void setGender(String gender) {
        this.gender = gender;
    }

    
    @Column(name="MARITALSTATUS", length=50)
    public String getMaritalstatus() {
        return this.maritalstatus;
    }
    
    public void setMaritalstatus(String maritalstatus) {
        this.maritalstatus = maritalstatus;
    }

    @Temporal(TemporalType.DATE)
    @Column(name="CREATEDDATE", length=7)
    public Date getCreateddate() {
        return this.createddate;
    }
    
    public void setCreateddate(Date createddate) {
        this.createddate = createddate;
    }

    @Temporal(TemporalType.DATE)
    @Column(name="MODIFIEDDATE", length=7)
    public Date getModifieddate() {
        return this.modifieddate;
    }
    
    public void setModifieddate(Date modifieddate) {
        this.modifieddate = modifieddate;
    }

    
    @Column(name="EMAIL", length=200)
    public String getEmail() {
        return this.email;
    }
    
    public void setEmail(String email) {
        this.email = email;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="usermasterByLastmodifiedbyid")
    public Set<Questionanswermapping> getQuestionanswermappingsForLastmodifiedbyid() {
        return this.questionanswermappingsForLastmodifiedbyid;
    }
    
    public void setQuestionanswermappingsForLastmodifiedbyid(Set<Questionanswermapping> questionanswermappingsForLastmodifiedbyid) {
        this.questionanswermappingsForLastmodifiedbyid = questionanswermappingsForLastmodifiedbyid;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="usermasterByCreatedbyid")
    public Set<Surveymaster> getSurveymastersForCreatedbyid() {
        return this.surveymastersForCreatedbyid;
    }
    
    public void setSurveymastersForCreatedbyid(Set<Surveymaster> surveymastersForCreatedbyid) {
        this.surveymastersForCreatedbyid = surveymastersForCreatedbyid;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="usermaster")
    public Set<Userlist> getUserlists() {
        return this.userlists;
    }
    
    public void setUserlists(Set<Userlist> userlists) {
        this.userlists = userlists;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="usermasterByCreatedbyid")
    public Set<Questionanswermapping> getQuestionanswermappingsForCreatedbyid() {
        return this.questionanswermappingsForCreatedbyid;
    }
    
    public void setQuestionanswermappingsForCreatedbyid(Set<Questionanswermapping> questionanswermappingsForCreatedbyid) {
        this.questionanswermappingsForCreatedbyid = questionanswermappingsForCreatedbyid;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="usermasterByCreatedbyid")
    public Set<Questionmaster> getQuestionmastersForCreatedbyid() {
        return this.questionmastersForCreatedbyid;
    }
    
    public void setQuestionmastersForCreatedbyid(Set<Questionmaster> questionmastersForCreatedbyid) {
        this.questionmastersForCreatedbyid = questionmastersForCreatedbyid;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="usermasterByLastmodifiedbyid")
    public Set<Surveymaster> getSurveymastersForLastmodifiedbyid() {
        return this.surveymastersForLastmodifiedbyid;
    }
    
    public void setSurveymastersForLastmodifiedbyid(Set<Surveymaster> surveymastersForLastmodifiedbyid) {
        this.surveymastersForLastmodifiedbyid = surveymastersForLastmodifiedbyid;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="usermasterByLastmodifiedbyid")
    public Set<Questionmaster> getQuestionmastersForLastmodifiedbyid() {
        return this.questionmastersForLastmodifiedbyid;
    }
    
    public void setQuestionmastersForLastmodifiedbyid(Set<Questionmaster> questionmastersForLastmodifiedbyid) {
        this.questionmastersForLastmodifiedbyid = questionmastersForLastmodifiedbyid;
    }




}


